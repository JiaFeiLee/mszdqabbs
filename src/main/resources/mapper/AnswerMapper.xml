<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="matsk.mszdqabbs.DAO.AnswerDAO">
    <select id="getAnswerCountByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM answer
        WHERE answerer = #{answerer}
    </select>

    <select id="getAnswererNicknameByAnswerId" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT nickname FROM user
        WHERE id =
        (SELECT answerer FROM answer
        WHERE id = #{answerId})
    </select>

    <select id="getAllAnswerContent" resultType="java.lang.String">
        SELECT content FROM answer
    </select>

    <insert id="insertNewAnswer" parameterType="matsk.mszdqabbs.Pojo.Answer" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO answer(
        id,
        which_question,
        answerer,
        content,
        answer_time,
        last_update_time,
        browse_count)
        VALUES (
        #{id},
        #{which_question},
        #{answerer},
        #{content},
        NOW(),
        null,
        0)
    </insert>

    <select id="getSomeAnswerNew" resultType="matsk.mszdqabbs.Pojo.Answer">
        SELECT * FROM answer
        WHERE which_question = #{which_question}
        ORDER BY answer_time DESC LIMIT ${startAt},${howMany}
    </select>

    <select id="getSomeAnswerPopular" resultType="matsk.mszdqabbs.Pojo.Answer">
        SELECT * FROM answer
        WHERE which_question = #{which_question}
        ORDER BY browse_count DESC LIMIT ${startAt},${howMany}
    </select>

    <select id="getAnswererOf" resultType="matsk.mszdqabbs.Pojo.User" parameterType="java.lang.Integer">
        SELECT * FROM user WHERE id =
        (SELECT answerer FROM answer WHERE id = #{answerId})
    </select>

    <select id="getCollectionCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT COUNT(*) FROM collection
        WHERE collection_type = 0
          AND collection_id = #{answerId}
    </select>

    <select id="getLikeCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT COUNT(*) FROM agreeornot
        WHERE evaluate_type = 0
          AND agreeornot = 1
          AND to_evaluate = #{answerId}
    </select>

    <select id="getDislikeCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT COUNT(*) FROM agreeornot
        WHERE evaluate_type = 0
          AND agreeornot = 0
          AND to_evaluate = #{answerId}
    </select>

    <select id="getCommentCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT COUNT(*) FROM comment
        WHERE to_comment_type = 0
          AND to_comment = #{answerId}
    </select>

    <select id="getAllAnswerCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM answer
    </select>

    <select id="getAllAnswerCountOf" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT COUNT(*) FROM answer
        WHERE which_question = #{which_question}
    </select>

    <select id="getAnswerById" parameterType="java.lang.Integer" resultType="matsk.mszdqabbs.Pojo.Answer">
        SELECT * FROM answer
        WHERE id = #{answerId}
    </select>

    <update id="beBrowsed" parameterType="java.lang.Integer">
        UPDATE answer SET
        browse_count = browse_count + 1
        WHERE id = #{answerId}
    </update>

    <select id="getAnswersWriteBy" parameterType="java.lang.Integer" resultType="matsk.mszdqabbs.Pojo.Answer">
        SELECT * FROM answer
        WHERE answerer = #{answerer}
    </select>

    <update id="updateAnswer">
        UPDATE answer SET
        content = #{newContent},
        last_update_time = NOW()
        WHERE id = #{answerId}
    </update>

    <delete id="deleteAnswerAndAssociations" parameterType="java.lang.Integer">
        DELETE FROM agreeornot WHERE evaluate_type = 4 AND to_evaluate IN
        (SELECT id FROM comment WHERE to_comment_type = 0 AND to_comment = #{answerId});

        DELETE FROM comment WHERE to_comment_type = 0 AND to_comment = #{answerId};

        DELETE FROM collection WHERE collection_type = 0 AND collection_id = #{answerId};

        DELETE FROM agreeornot WHERE evaluate_type = 0 AND to_evaluate = #{answerId};

        DELETE FROM answer WHERE id = #{answerId};
    </delete>

    <select id="getAnswersCollectedBy" parameterType="java.lang.Integer" resultType="matsk.mszdqabbs.Pojo.Answer">
        SELECT * FROM answer
        WHERE id IN
              (SELECT collection_id FROM collection
               WHERE collector = #{collector}
                 AND collection_type = 0)
    </select>

    <select id="getQuestionAnswerCountByAnswerId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM answer
        WHERE which_question =
        (SELECT which_question FROM answer WHERE id = #{answerId})
    </select>

    <select id="getQuestionTitleByAnswerId" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT q.title FROM question q INNER JOIN answer a
        WHERE a.id = #{answerId}
          AND q.id = a.which_question
    </select>

    <resultMap id="searchAnswerResultMap" type="java.util.HashMap">
        <id property="id" javaType="java.lang.Integer" jdbcType="INTEGER" column="id" />
        <result property="type" javaType="java.lang.String" jdbcType="VARCHAR" column="type" />
        <result property="which_question" javaType="java.lang.Integer" jdbcType="INTEGER" column="which_question" />
        <result property="answerer" javaType="java.lang.Integer" jdbcType="INTEGER" column="answerer" />
        <result property="content" javaType="java.lang.String" jdbcType="VARCHAR" column="content" />
        <result property="answer_time" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP" column="answer_time" />
        <result property="last_update_time" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP" column="last_update" />
        <result property="browse_count" javaType="java.lang.Integer" jdbcType="INTEGER" column="browse_count" />
        <result property="score" javaType="java.lang.Double" jdbcType="DOUBLE" column="score" />
    </resultMap>

    <select id="searchAnswerInNaturalLanguageMode" parameterType="java.lang.String" resultMap="searchAnswerResultMap">
        #自然语言搜索，使用到mysql自带的ngram解析器，自动按照匹配度从高到低排序
        #需要对MATCH的列建立联合全文索引，并声明WITH PARSER ngram，在my.ini配置文件中[mysqld]下配置ngram_token_size=2
        #结果封装为Map，score代表匹配度
        SELECT id, 'answer' as type, which_question, answerer, content, answer_time, last_update_time, browse_count,
            MATCH(content) AGAINST(#{searchVal}) as score
        FROM answer
        HAVING score > 0
        ORDER BY score DESC
    </select>
</mapper>